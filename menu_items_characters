#!/usr/bin/env sh
set -e
dir=$(cd -P -- "$(dirname -- "$0")" && pwd -P)

path_file_unicodedata="/usr/share/unicode/UnicodeData.txt"

[ -r "$path_file_unicodedata" ] || {
  echo "$(basename "$0"): This script requires the UnicodeData.txt file from the package unicode-character-database"
  exit 1
}

code_tgt_begin="$1"
code_tgt_end="$2"

file_unicodedata=$(<"$path_file_unicodedata")

all_codes="$(cut -d ";" -f "1" <<< "$file_unicodedata")"

[ "$code_tgt_begin" ] && [ "$code_tgt_end" ] && {
  code_begin="$($dir/closest_int_hex -s <(echo "$all_codes") -t "$1" -d "p")"
  code_end="$($dir/closest_int_hex -s <(echo "$all_codes") -t "$2" -d "n")"

  idx_begin="$(grep --line-number "^$code_begin;" <<< "$file_unicodedata" | cut -d ":" -f 1)"
  idx_end="$(grep --line-number "^$code_end;" <<< "$file_unicodedata" | cut -d ":" -f 1)"

  unicodedata="$(
    echo "$file_unicodedata" | head -n "$idx_end" | tail -n"+$idx_begin" | cut -d ";" -f "1,2,11"
  )" 

  codes="$(echo "$all_codes" | head -n "$idx_end" | tail -n"+$idx_begin")"
} || {
  unicodedata="$(echo "$file_unicodedata" | cut -d ";" -f "1,2,11")"
  codes="$all_codes"
}

names="$(
  cut -d ";" -f "2,3" <<< "$unicodedata" | sed -e 's/;$//g' | sed -e 's/;/ | /g' | sed -e 's/$/ ]/g' | sed -e 's/^/[ /g' | sed -e 's/<//g' | sed -e 's/>//g'
)"

chars="$(
  ifs_old=$IFS; IFS=$'\n'
  for code in $codes; do
    [ "$code" = "0000" ] || [ "$code" = "000A" ] && { printf '%s\n' "[ N/A ] -"; continue; }
    printf '[ %b ] -\n' "\\U$code"
  done
  IFS=$ifs_old
)"

paste -d" " \
  <(echo "$chars") \
  <(echo "$codes" | sed -e 's/$/ ] -/g' | sed -e 's/^/[ /g') \
  <(echo "$names")
